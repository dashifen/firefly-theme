.screen-reader-text,.visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute!important;width:1px;white-space:nowrap}.visually-hidden:active,.visually-hidden:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto;white-space:inherit}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box;color:#060607;font:normal 125%/1.6 Lato,sans-serif}*,:after,:before{box-sizing:inherit}a:link,a:visited{color:#5d2189}a:active,a:focus,a:hover{color:#f5df4d}body{font-size:.9rem;overflow-x:hidden}nav .menu{list-style-type:none;margin:0;padding:0}.container{margin:0 .5rem}@media only screen and (min-width:768px){.container{margin:0 1.5rem}}.banner{background:transparent url(images/firefly-glowing.jpg) 0 50% no-repeat;background-size:contain;height:2.5rem;position:relative}@media only screen and (min-width:768px){.banner{height:3.2rem}}.banner a{color:#060607;text-decoration:none}.banner #page-title{font-family:Kaushan Script,serif;font-size:1.25rem;padding-left:3rem;padding-top:.25rem}@media only screen and (min-width:768px){.banner #page-title{font-size:1.75rem;padding-left:5rem;padding-top:0}}.banner .toggle{cursor:pointer;display:inline-block;outline:none;width:28px}.banner .toggle .mid-line,.banner .toggle:after,.banner .toggle:before{background-color:#3b3c53;border-radius:4px;content:"";display:block;height:4px;margin:4px 0;transition:all .2s ease-in-out}.banner .main-menu{position:absolute;right:-.5rem;transform:translateX(100%);transition:transform .5s ease-in-out;top:0;width:10rem}.banner .menu-item-container{list-style-type:none;margin:0;padding:0}.banner .menu-item:first-child .menu-item-link{border-top-left-radius:.5rem}.banner .menu-item:last-child .menu-item-link{border-bottom-left-radius:.5rem}.banner .menu-item-link{background-color:#3b3c53;border:1px solid #3b3c53;color:#f5df4d;display:inline-block;text-align:center;width:100%}.banner .menu-item-link:active,.banner .menu-item-link:focus,.banner .menu-item-link:hover{background-color:#f5df4d;border-color:#8c6c0c;color:#3b3c53}.banner #toggler:active .toggle .mid-line,.banner #toggler:active .toggle:after,.banner #toggler:active .toggle:before,.banner #toggler:focus .toggle .mid-line,.banner #toggler:focus .toggle:after,.banner #toggler:focus .toggle:before,.banner #toggler:hover .toggle .mid-line,.banner #toggler:hover .toggle:after,.banner #toggler:hover .toggle:before{background-color:#5d2189;outline:0}.banner #toggler.open .toggle:after{transform:translateY(-8px) rotate(-135deg)}.banner #toggler.open .toggle:before{transform:translateY(8px) rotate(135deg)}.banner #toggler.open .toggle .mid-line{transform:scale(0) rotate(1turn)}.banner #toggler.open+.main-menu{transform:translateX(0)}

/*!
 * WP Core CSS
 * ===========
 * Use with _mixins.scss imported prior to this file
 */.alignnone{margin:0 1rem 1rem 0}.aligncenter{clear:both;display:block;margin:.25rem auto}.alignright{float:right;margin:.25rem 0 1rem 1rem}.alignleft{float:left;margin:.25rem 1rem 1rem 0}a img.alignright{float:right;margin:.25rem 0 1rem 20px}a img.alignleft,a img.alignnone{margin:.25rem 1rem 1rem 0}a img.alignleft{float:left}a img.aligncenter{display:block;margin-left:auto;margin-right:auto}.wp-caption{background:#fff;border:1px solid #f0f0f0;max-width:96%;padding:.25rem 3px 10px;text-align:center}.wp-caption.alignleft,.wp-caption.alignnone{margin:.25rem 1rem 1rem 0}.wp-caption.alignright{margin:.25rem 0 1rem 1rem}.wp-caption img{border:0;height:auto;margin:0;max-width:98.5%;padding:0;width:auto}.wp-caption p.wp-caption-text{font-size:.55rem;line-height:.85rem;margin:0;padding:0 .2rem .25rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
